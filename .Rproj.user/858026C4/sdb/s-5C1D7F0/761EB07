{
    "collab_server" : "",
    "contents" : "\ngetStatus<-function(x) {\n  \n  if (x=='Abandonada' || x=='Caducidad' || x=='Denegada' || x=='Desistida' || x=='Nulidad') {\n    \n        m<-'INACTIVE' }\n  else {\n    \n        m<-'REGISTERED'}\n \n  \n  \n  return(m)\n   \n}\n\n\ngetType<-function(x) {\n  \n  if (x=='Denominativa') {\n    \n    m<-'WORD'\n    \n  } else if (x=='Mixta') {\n    \n    m<-'WORD-DEVICE'\n  \n    } else if (x=='Figurativa') {\n  \n      m<-'DEVICE'\n      \n    } else if (x=='Tridimensional') {\n      \n      m<-'3D'\n      \n    } else if (x=='Sonora') {\n      \n      m<-'SOUND'\n      \n    } else {\n      \n      m<-'NO TM LIKE THAT'\n    }\n  \n    return(m)\n    \n}\n\ngetDatePattern <- function(text,pattern) {\n\n  result <- regmatches(text,regexec(pattern,text))\n  r<-result[[1]][2]\n  r<-strapplyc(r, \"[0-9/]{8,}\", simplify = TRUE)\n\n  date<-try(as.Date(r,\"%d/%m/%Y\"),silent = TRUE)\n  \n  date<-try(format(date, \"%d.%m.%Y\"),silent=TRUE)\n  \n  if (length(date)==0 || is.na(date) || class(date)=='try-error') {\n    \n    date<-format(as.Date(\"1800-01-01\",\"%Y-%m-%d\"),\"%d.%m.%Y\")\n  }\n  \n  return(date)\n}\n\ngetNamesPattern <- function(text,pattern) {\n # pattern<-\".*Denominación:(.*?)Tipo.*\"\n  result <- regmatches(text,regexec(pattern,text))\n  r<-result[[1]][2]\n  r<-gsub(\"\\r\\n\",\"\",r)\n  r<-trimws(r,'b')\n  \n  return(r)\n}\n\nARScrap <- function(AppNo) {\n  #AppNo <-764566\n\n  #Making URL and Reading data\n  \n  AppNo<-gsub(\",\",\"\",AppNo)\n  AppNo<-gsub(\"/\",\"\",AppNo)\n  AppNo<-gsub(\".\",\"\",AppNo, fixed = TRUE)\n  \n  url <-\n    paste(\n      \"https://portaltramites.inpi.gob.ar/Clasico/Docs/ResultadosConsultas/ResultadoSolicitudMarca2.asp?Va=\",\n      AppNo,\n      sep = \"\"\n    )\n  \n  data <- url %>% read_html(encoding=\"utf-8\")\n\n  application <-data %>% html_node(xpath = \"//tr//div[contains(.,'Presentaci')]\")%>% \n                html_text()\n  \n  application<-getDatePattern(application,\".*Presentaci(.*?)Denominaci.*\")\n  \n \n  registrationNo<-data %>% html_node(xpath = \"//strong[contains(.,'Resoluci')]/following::tr[1]//span[text()='Nro:']/following::span\")%>% \n                  html_text()\n  \n  registrationNo<-try(as.numeric(registrationNo))\n  \n  if (length(registrationNo)==0) {\n\n    registrationNo<-NA\n  }\n  \n  \n  \n  #Previous registration number\n  prevRegNo<-data %>% html_node(xpath = \"//tr//div[contains(.,'Direccion de Marcas')]/following::tr[4]//td[span/text()='Renov. de']\")%>% \n    html_text()\n  \n  prevRegNo<-try(as.numeric(prevRegNo))\n  \n  if (length(prevRegNo)==0) {\n    \n    prevRegNo<-NA\n  }\n  \n\n  renewal<-try(as.Date(data %>% html_nodes(xpath = \"//tr/td[text()='Vence:']/following::td[1]\")%>% \n                html_text(),\"%d/%m/%Y\"))\n  \n  ####Acceptance - it has to be in unambiguous format\n  acceptance<-try(as.POSIXlt(renewal))\n  \n  renewal<-format(renewal, \"%d.%m.%Y\")\n  \n  if (length(renewal)==0 || is.na(renewal)) {\n\n    renewal<-format(as.Date(\"1800-01-01\",\"%Y-%m-%d\"),\"%d.%m.%Y\")\n  }\n  \n  TMName<-data %>% html_node(xpath = \"//tr//div[contains(.,'Presentaci')]\")%>% \n    html_text()\n    \n  TMName<-getNamesPattern(TMName,\".*Denominación:(.*?)Tipo.*\")\n    \n  \n  \n  \n  acceptance$year<-acceptance$year-10\n  \n\n  acceptance<-format(acceptance, \"%d.%m.%Y\")\n  if (length(acceptance)==0 || is.na(acceptance)) {\n\n    acceptance<-format(as.Date(\"1800-01-01\",\"%Y-%m-%d\"),\"%d.%m.%Y\")\n  }\n  \n\n  \n  #Priority date \n  priority <-\n     as.Date(\n      data %>% html_node(xpath = \"//strong[contains(.,'Prioridades')]/following::tr[1]//span[text()='Fecha:']/following::td\")%>% \n  html_text(),\n       \"%d/%m/%Y\"\n     )\n   \n  priority<-format(priority, \"%d.%m.%Y\")\n\n  if (length(priority)==0 || is.na(priority)) {\n\n    priority<-format(as.Date(\"1800-01-01\",\"%Y-%m-%d\"),\"%d.%m.%Y\")\n  }\n\n\n  priorityNo<-gsub(\" \",\"\",data %>% html_node(xpath = \"//strong[contains(.,'Prioridades')]/following::tr[1]//span[text()='Prioridad: ']/following::td\")%>% \n  html_text())\n\n  if (length(priorityNo)==0) {\n\n    priorityNo<-NA\n  }\n\n  priorityCountry<-gsub(\" \",\"\",  data %>% html_node(xpath = \"//strong[contains(.,'Prioridades')]/following::tr[1]//div[contains(.,'Pais:')]/following::td\")%>% \n  html_text())\n  \n  if (length(priorityCountry)==0) {\n\n    priorityCountry<-NA\n  }\n  \n  #PublicationDate\n  publication <-data %>% html_node(xpath = \"//span[contains(.,'PUBLICACI')]/following::tr[1]\")%>% \n    html_text()\n  \n  publication<-getDatePattern(publication,\".*Fecha(.*?)Numero.*\")\n  \n  \n publicationNo<-data %>% html_nodes(xpath = \"//span[contains(.,'PUBLICACI')]/following::tr[1]/td[contains(@class,'titulorojo')]//a\")%>% \n   html_text()\n \n publicationNo<-gsub('([0-9]+).*','\\\\1',publicationNo)\n \n if (length(publicationNo)==0) {\n   \n   publicationNo<-NA\n }\n  \n  owner<-gsub(\"\\r\\n\",\"\",data %>% html_nodes(xpath = \"//strong[contains(.,'Datos de titulares')]/following::tr[1]//p[text()='Nombre']/following::td[1]\") \n    %>% html_text())\n  \n  \n  \n  if (length(owner)==0) {\n    \n    owner<-NA\n  } \n  \n  owner<-paste(owner, collapse=\" | \")\n\n  ownerAddr<-gsub(\"\\r\\n\",\"\",data %>% html_nodes(xpath = \"//strong[contains(.,'Datos de titulares')]/following::tr[1]//td[text()='Domicilio Real']/following::span[1]\") \n                  %>% html_text())\n  \n  ownerAddr<-str_trim(ownerAddr)\n  \n  OwnerCountry<-gsub(\"\\r\\n\",\"\",data %>% html_nodes(xpath = \"//strong[contains(.,'Datos de titulares')]/following::tr[1]//td[text()='Territorio Leg.']/following::td[1]\") \n                  %>% html_text())\n  \n  OwnerCountry<-str_trim(OwnerCountry)\n  \n  ownerAddr<-paste(ownerAddr,OwnerCountry,sep=\" \")\n  \n  ownerAddr<-str_trim(gsub(\"-\",\"\",ownerAddr))\n  \n  if (length(ownerAddr)==0) {\n    \n    ownerAddr<-NA\n  }\n  \n  ownerAddr<-paste(ownerAddr,collapse=\" | \")\n  \n  agentOnRecord1<-gsub(\"\\r\\n\",\"\",data %>% html_nodes(xpath = \"//strong[contains(.,'Gestion')]/following::tr[1]//td[text()='Agente:']/following::td[1]\") \n                      %>% html_text())\n  \n  agentOnRecord1<-str_trim(gsub('[[:digit:]]+', '', agentOnRecord1))\n  \n  agentOnRecord2<-gsub(\"\\r\\n\",\"\",data %>% html_nodes(xpath = \"//strong[contains(.,'Gestion')]/following::tr[1]//span[text()='Caracter:']/following::td[1]\") \n                       %>% html_text())\n \n  \n  if (length(agentOnRecord2)>0) {\n  agentOnRecord<-paste(agentOnRecord1,\" (\",agentOnRecord2,\")\",sep=\"\")\n  } else {agentOnRecord<-agentOnRecord1}\n  \n  if (length(agentOnRecord)==0) {\n\n    agentOnRecord<-NA\n  }\n\n  AgentOnRecordAddr<-data %>% html_node(xpath = \"//tr//div[contains(.,'Presentaci')]\")%>%\n    html_text()\n  \n  AgentOnRecordAddr<-str_trim(getNamesPattern(AgentOnRecordAddr,\".*Domicilo legal:(.*?)Renov. de*\"))\n  \n  AgentOnRecordAddr<-paste(AgentOnRecordAddr,' ARGENTINA',sep=\",\")\n  \n  if (length(AgentOnRecordAddr)==0) {\n    \n    AgentOnRecordAddr<-NA\n  }\n\n  agentOnRecord<-paste(agentOnRecord,AgentOnRecordAddr,sep=\"\\n \")\n  \n  #NA\n  associatedTMs<-NA\n  \n  ###Dealing with images \n  imageUrl<-data %>% html_node(xpath = \"//tr//td[@class='titulorojo']/a\")%>% \n             html_attr(\"href\")\n  \n\n  if (length(imageUrl) == 1 && !is.na(imageUrl)) {\n    cat(paste(\"\\n\",\"Downloading image...\",sep=\"\"))\n    \n    img <- imageUrl%>%read_html()%>%html_nodes(\"img\")\n    \n    img_src <- html_attr(img, \"src\")\n    \n    if (length(img_src)==1) {\n    img_src <- gsub(\"^data.*base64,\", \"\", img_src)\n    \n    imageJPG<-try(image_read(base64_decode(img_src)), silent=TRUE)\n    \n    if (class(imageJPG)!=\"try-error\") {\n    \n    image_write(imageJPG,path=paste(\"./logos/\",AppNo,\".jpg\",sep=\"\"))\n      \n    }\n    #python.call(\"decodeImgData\", imageUrl,as.character(AppNo))\n    } else {imageUrl<-NA}\n  } else {imageUrl<-NA}\n  \n  \n  \n  #####Classes\n   tmpDF <- data.frame(matrix(ncol = 18, nrow = 1))\n    class <-\n      sapply(as.list(1:9), function(x) {\n        return(paste(\"class\", x, sep = \"\"))\n      })\n    desc <-\n      sapply(as.list(1:9), function(x) {\n        return(paste(\"description\", x, sep = \"\"))\n      })\n    \n    colnames(tmpDF) <- c(class, desc)\n    \n    classNo<-gsub(\"\\r\\n\",\"\",data %>% html_nodes(xpath = \"//strong[contains(.,'Datos de titulares')]/following::tr[1]//td[contains(.,'Clase')]\") \n                  %>% html_text())\n    \n    if (length(classNo)>0)\n    {\n    \n    classNo<-getNamesPattern(classNo,\".*Clase(.*?)Proteccion.*\")\n    \n    } else \n      \n      {classNo<-NA}\n    \n    classDes<-gsub(\"\\r\\n\",\"\",data %>% html_nodes(xpath = \"//strong[contains(.,'Datos de titulares')]/following::tr[1]//td[contains(.,'Clase')]\") \n                  %>% html_text())\n    \n    if (length(classDes)>0)\n    {\n       classDes<-getNamesPattern(classDes,\".*Proteccion.(.*?)Limitacion*\")\n    \n    } else {classDes<-NA}\n   \n    tmpDF$class1<-classNo\n    \n    tmpDF$description1<-classDes\n    \n     \n  \n  \n  LimDis<-gsub(\"\\r\\n\",\"\",data %>% html_node(xpath = \"//strong[contains(.,'Datos de titulares')]/following::tr[1]//td[contains(.,'Limitacion:')]/following::td[1]\") \n               %>% html_text())\n  \n \n  if  (length(LimDis)==0){\n\n    LimDis<-NA }\n  \n  LimDis<-str_trim(gsub(\"-\",\"\",LimDis))\n  \n  words<-NA\n  \n  image<-NA\n  \n  \n\n\n\n\n  status<-data %>% html_node(xpath = \"//strong[contains(.,'Resoluci')]/following::tr[1]//strong[text()='Tipo:']/following::span\")%>% \n    html_text()\n  \n  status<-getStatus(status)\n\n  kind<-data %>% html_node(xpath = \"//tr//div[contains(.,'Direccion de Marcas')]/following::tr[2]//td[span/text()='Tipo Marca :']\")%>% \n    html_text()\n  \n  kind<-str_trim(gsub(\"Tipo Marca :\",\"\",kind))\n  \n  kind<-getType(kind)\n  \n  \n  \n  #return DF\n  tmpDF <- cbind(\n    data.frame(\n      AppNo,\n     # TMName,\n      registrationNo,\n      renewal,\n      application,\n      acceptance,\n      priority,\n      priorityNo,\n      priorityCountry,\n      publication,\n      publicationNo,\n      agentOnRecord,\n      associatedTMs,\n      prevRegNo,\n      status,\n      kind,\n      words,\n      image,\n      imageUrl,\n      LimDis,\n      owner,\n      ownerAddr,\n      stringsAsFactors = FALSE\n    ),\n    tmpDF\n  )\n  \n  tmpDF<-tmpDF%>%dplyr::rename(\n    `Application no.`=AppNo,\n    # Trademark=TMName,\n    `Application date`=application,\n    `Registration no.`=registrationNo,\n    `Registration date`=acceptance,\n    `Next renewal date`=renewal,\n    `Priority date`=priority,\n    `Priority no.`=priorityNo,\n    `Priority country`=priorityCountry,\n    `Publication date`=publication,\n    `Publication no.`=publicationNo,\n    `TM Type`=kind,\n     Status=status,\n    `Limitations & Disclaimers`=LimDis,\n    `Agent on record`=agentOnRecord,\n     Owner=owner,\n    `Owner address`=ownerAddr,\n    `Associated TMs`=associatedTMs,\n    `Previous registration no.`=prevRegNo,\n    `1st Class`=   class1,\n    `1st Goods & Services` =description1,\n    `2nd Class` = class2,\n    `2nd Goods & Services`=description2,\n    `3rd Class` =class3,\n    `3rd Goods & Services`=description3,\n    `4th Class`  =class4,\n    `4th Goods & Services`=description4,\n    `5th Class`   =class5,\n    `5th Goods & Services`=description5,\n    `6th Class`   =class6,\n    `6th Goods & Services`=description6,\n    `7th Class`  =class7,\n    `7th Goods & Services`=description7,\n    `8th Class`  =class8,\n    `8th Goods & Services`=description8,\n    `9th Class`  =class9,\n    `9th Goods & Services`=description9\n  )\n  #\n  \n  if (class(tmpDF) != \"data.frame\")\n  {\n    tmpDF = as.data.frame(NULL)\n  }\n  \n  \n  return(tmpDF)\n}\n",
    "created" : 1505826828253.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2898378295",
    "id" : "761EB07",
    "lastKnownWriteTime" : 1506443729,
    "last_content_update" : 1506443729,
    "path" : "C:/Users/Godnov/Dropbox/Katarina/AR_Scrapping.R",
    "project_path" : "AR_Scrapping.R",
    "properties" : {
        "docOutlineVisible" : "0",
        "tempName" : "Untitled4"
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}